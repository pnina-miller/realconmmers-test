{"version":3,"sources":["components/detailesCard.js","components/itemCards.js","components/dataView.js","App.js","reportWebVitals.js","index.js"],"names":["DetailesCard","history","useHistory","item","location","state","useEffect","Card","className","Container","Row","onClick","push","src","title","alt","Col","xs","md","Title","Year","slice","Type","Poster","onLoad","e","target","style","display","onError","GridItemCard","setTitle","lg","EditAbleTitle","itemId","imdbID","Img","ListItemCard","useState","titleInput","setTitleInput","defaultValue","onBlur","value","DataView","data","getServerData","typesArr","setTypesArr","cardsView","setCardsView","gridView","setGridView","sortIcon","setSortIcon","searchWord","setSearchWord","oldTitle","newTitle","oldCardsView","map","axios","method","url","catch","error","alert","results","a","Set","b","type","count","filter","c","length","filterCards","toLowerCase","includes","oldSor","reverse","onChange","Tabs","defaultActiveKey","id","onSelect","Tab","eventKey","i","tabClassName","xmlns","width","height","fill","class","viewBox","d","App","setData","get","then","res","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62bf9caf.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Card, Container, Row, Col } from 'react-bootstrap'\r\n\r\nexport default function DetailesCard() {\r\n  const history = useHistory()\r\n  const item = history.location.state\r\n\r\n  useEffect(() => {\r\n    if (!item) { }\r\n  }, [item])\r\n\r\n  return (<>\r\n    <Card className='detailes-card-card' >\r\n      <Container>\r\n        <Row>\r\n          <img\r\n            onClick={() => history.push('/')}\r\n            className='detailes-card-img'\r\n            src={`https://img.icons8.com/?id=80689&size=64&token=&format=png&fromSite=true&color=000000`}\r\n            title='back'\r\n            alt='back'\r\n          />\r\n        </Row>\r\n        <Row>\r\n          <Col xs={12} md={6}>\r\n            <h1>{item.Title}</h1>\r\n            <h2>{item.Year.slice(0, 4)}</h2>\r\n            <h2>type: {item.Type}</h2>\r\n          </Col>\r\n          <Col>\r\n             <img \r\n             alt='poster' \r\n             src={item.Poster}\r\n             onLoad={e=>e.target.style.display=''} \r\n             key={item.Poster} \r\n             onError={e=>e.target.style.display='none'} \r\n              />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Card>\r\n  </>)\r\n}","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Card, Row, Col } from 'react-bootstrap'\r\n\r\nexport function GridItemCard({ item, setTitle }) {\r\n    const history = useHistory()\r\n    return (\r\n        <Col xs={12} md={6} lg={3}>\r\n            <Card className='card-grid-card' >\r\n                <EditAbleTitle itemId={item.imdbID} title={item.Title} setTitle={setTitle}/>\r\n                 <Card.Img \r\n                 className='card-grid-img'\r\n                 onClick={() => history.push(`/${item.Title}`, item)}\r\n                 onLoad={e=>e.target.style.display=''} \r\n                 key={item.Poster} \r\n                 onError={e=>{e.target.style.display='none'}} \r\n                 src={item.Poster}   \r\n                 />\r\n            </Card>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport function ListItemCard({ item, setTitle }) {\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <Card className='card-list-card'>\r\n            <Row>\r\n                <Col xs={12} md={2}>\r\n                    <Card.Img \r\n                    onLoad={e=>e.target.style.display=''} \r\n                    onError={e=>{e.target.style.display='none'}} \r\n                    onClick={() => history.push(`/${item.Title}`, item)}\r\n                    src={item.Poster} \r\n                    className='card-list-img' \r\n                     />\r\n                </Col>\r\n                <Col xs={12} md={10} className='card-list-details-col' >\r\n                    <EditAbleTitle itemId={item.imdbID} title={item.Title} setTitle={setTitle} />\r\n                    <h6>{item.Year.slice(0, 4)}</h6>\r\n                    <h6>type: {item.Type}</h6>\r\n                </Col>\r\n            </Row>\r\n        </Card>\r\n    )\r\n\r\n}\r\n\r\nfunction EditAbleTitle({ title, setTitle, itemId }) {\r\n    const [titleInput, setTitleInput] = useState(false)\r\n\r\n    return (\r\n        titleInput ?\r\n            <input defaultValue={title} onBlur={e => { setTitleInput(false); setTitle(title, e.target.value, itemId) }} />\r\n            : <Card.Title onClick={() => setTitleInput(true)} className='editAble-title' >{title}</Card.Title>\r\n    )\r\n}\r\n","\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios'\r\nimport { Container, Row, Col, Tabs, Tab } from 'react-bootstrap'\r\n\r\nimport { GridItemCard, ListItemCard } from './itemCards'\r\n\r\n\r\nexport default function DataView({ data, getServerData }) {\r\n\r\n  const [typesArr, setTypesArr] = useState([])\r\n  const [cardsView, setCardsView] = useState([])\r\n  const [gridView, setGridView] = useState(true)\r\n  const [sortIcon, setSortIcon] = useState('a0bAWjN2IPpJ')\r\n  const [searchWord, setSearchWord] = useState('')\r\n\r\n  const setTitle = (oldTitle, newTitle, itemId) => {\r\n    if (oldTitle !== newTitle) {\r\n      setCardsView(oldCardsView => oldCardsView.map(item => (item.Title === oldTitle ? { ...item, Title: newTitle } : item)))\r\n      axios({\r\n        method: \"post\",\r\n        url: \"react_Response.json/\" + itemId,\r\n        data: {\r\n          oldTitle: oldTitle,\r\n          newTitle: newTitle,\r\n        },\r\n      })\r\n        .catch(error => alert('failed to save data error description: ' + error))\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setCardsView(data?.results)\r\n    let a = [...new Set(data?.results.map(item => item.Type))]\r\n    setTypesArr(a.map(b => ({ type: b, count: data.results.filter(c => c.Type === b).length })))\r\n  }, [data])\r\n  useEffect(() => filterCards(searchWord), [searchWord])\r\n\r\n  const filterCards = (value) => {\r\n    setCardsView(data?.results?.filter(item => item.Title.toLowerCase().includes(value.toLowerCase()) || item.Year.slice(0, 4).includes(value)))\r\n\r\n  }\r\n  return (\r\n    <Container className='data-view-container' >\r\n      <h1>Pnina Miller</h1>\r\n      <Row className='data-view-row'>\r\n        <img\r\n          className='refresh-icon view-data-icon'\r\n          src='https://img.icons8.com/?id=59872&size=30&token=&format=svg&fromSite=true&color=000000'\r\n          onClick={getServerData}\r\n          title='refresh'\r\n          alt='refresh'\r\n        />\r\n        <img\r\n          onClick={() => {\r\n            setSortIcon(oldSor => oldSor === 'a0bAWjN2IPpJ' ? 'iG5-XShb_qrY' : 'a0bAWjN2IPpJ');\r\n            setCardsView(cardsView.slice().reverse())\r\n          }}\r\n          className='view-data-icon'\r\n          src={`https://img.icons8.com/?id=${sortIcon}&size=32&token=&format=png&fromSite=true&color=000000`}\r\n          title='sort'\r\n          alt='sort'\r\n        />\r\n\r\n        <input\r\n          className='data-view-search-input'\r\n          value={searchWord}\r\n          onChange={e => setSearchWord(e.target.value)}\r\n        />\r\n        <img\r\n          className='view-data-icon clear-filter-icon'\r\n          src={`https://img.icons8.com/?id=5310&size=24&token=&format=png&fromSite=true&color=000000`}\r\n          onClick={() => setSearchWord('')}\r\n          title='clear filtering'\r\n          alt='clear filtering'\r\n        />\r\n      </Row>\r\n      <Row>\r\n        <Col xs={12} md={11}>\r\n          <Tabs defaultActiveKey='all' id='types-tabs' onSelect={type => {setSearchWord(''); setCardsView(data?.results?.filter(item => item.Type.includes(type))) }}>\r\n            <Tab\r\n              eventKey={''}\r\n              title={`all (${data?.results?.length})`}\r\n            />\r\n            {typesArr?.map((type, i) => (\r\n              <Tab\r\n                tabClassName='types-tab'\r\n                eventKey={type.type}\r\n                title={`${type.type} (${type.count})`}\r\n              >\r\n              </Tab>\r\n            ))}\r\n          </Tabs>\r\n        </Col>\r\n        <Col xs={1}>\r\n          <span title='grid' className='svg-icon' onClick={() => setGridView(true)}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"#707070\" class=\"bi bi-grid-fill\" viewBox=\"0 0 16 16\">\r\n              <path d=\"M1 2.5A1.5 1.5 0 0 1 2.5 1h3A1.5 1.5 0 0 1 7 2.5v3A1.5 1.5 0 0 1 5.5 7h-3A1.5 1.5 0 0 1 1 5.5v-3zm8 0A1.5 1.5 0 0 1 10.5 1h3A1.5 1.5 0 0 1 15 2.5v3A1.5 1.5 0 0 1 13.5 7h-3A1.5 1.5 0 0 1 9 5.5v-3zm-8 8A1.5 1.5 0 0 1 2.5 9h3A1.5 1.5 0 0 1 7 10.5v3A1.5 1.5 0 0 1 5.5 15h-3A1.5 1.5 0 0 1 1 13.5v-3zm8 0A1.5 1.5 0 0 1 10.5 9h3a1.5 1.5 0 0 1 1.5 1.5v3a1.5 1.5 0 0 1-1.5 1.5h-3A1.5 1.5 0 0 1 9 13.5v-3z\" />\r\n            </svg>\r\n          </span>\r\n          <span title='list' className='svg-icon' onClick={() => setGridView(false)}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"#707070\" class=\"bi bi-list-ul\" viewBox=\"0 0 16 16\">\r\n              <path fill-rule=\"evenodd\" d=\"M5 11.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zm-3 1a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm0 4a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm0 4a1 1 0 1 0 0-2 1 1 0 0 0 0 2z\" />\r\n            </svg></span>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {cardsView?.map(item => gridView ? <GridItemCard item={item} setTitle={setTitle} /> : <ListItemCard item={item} setTitle={setTitle} />)}\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios'\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport DetailesCard from './components/detailesCard'\r\nimport DataView from './components/dataView'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\n\r\nfunction App() {\r\n  const [data, setData] = useState()\r\n\r\n  const getServerData = () => {\r\n    axios.get('react_Response.json')\r\n      .then(res => {\r\n        setData(res.data);\r\n      })\r\n      .catch(error => alert('failed to load data error description: ' + error))\r\n  }\r\n  useEffect(getServerData, [])\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" render={() => <DataView data={data} getServerData={getServerData} />} />\r\n          <Route exact path=\"/:cardTitle\" render={() => <DetailesCard data={data} />} />\r\n        </Switch>\r\n      </Router>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}